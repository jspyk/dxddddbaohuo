
name: 保活验证工作流

on:
  # 自动定时运行（每天 UTC 8:00）
  schedule:
    - cron: "1 5,6,7,8 * * *"  # 北京时间 9:20, 13:20, 23:20
  workflow_dispatch:
jobs:
  validate-baohuo:
    runs-on: ubuntu-latest
    
    steps:
    # 1. 检出代码
    - name: 拉取代码
      uses: actions/checkout@v3

    # 2. 设置 Node.js 环境
    - name: 设置 Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # 3. 安装依赖
    - name: 安装依赖
      run: npm install axios

    # 4. 运行验证脚本
    - name: 执行保活验证
      id: run-script
      run: |
        output=$(node baohuo.js)
        echo "脚本原始输出：$output"
        
        # 提取标准化输出（示例：通过=9_失败=1_异常=1）
        SUMMARY=$(echo "$output" | grep -oP "通过=\d+_失败=\d+_异常=\d+")
        DETAILS=$(echo "$output" | grep -oP "details=.+")
        
        # 解析统计结果
        PASSED=$(echo "$SUMMARY" | cut -d'_' -f1 | cut -d'=' -f2)
        FAILED=$(echo "$SUMMARY" | cut -d'_' -f2 | cut -d'=' -f2)
        ERRORS=$(echo "$SUMMARY" | cut -d'_' -f3 | cut -d'=' -f2)
        
        # 设置动态通知消息
        if [ "$FAILED" -eq 0 ] && [ "$ERRORS" -eq 0 ]; then
          MSG="✅ 全部通过 (${PASSED}个)"
        elif [ "$PASSED" -eq 0 ]; then
          MSG="❌ 全部失败 (${FAILED}个失败 ${ERRORS}个异常)"
        else
          MSG="⚠️ 部分通过 (${PASSED}个通过 ${FAILED}个失败 ${ERRORS}个异常)"
        fi
        
        # 严格遵循GitHub输出格式
        echo "result=$([ "$FAILED" -eq 0 ] && echo 'success' || echo 'failure')" >> $GITHUB_OUTPUT
        echo "message=${MSG}" >> $GITHUB_OUTPUT
        echo "${DETAILS}" >> $GITHUB_OUTPUT

    # 5. 微信通知（无论成功/失败都推送）
    - name: 发送微信通知
      env:
        WXP_TOKEN: "AT_8W0HaJDqsTjYPxgsyCdg5xxGU58e7a9q"
        WXP_UID: "UID_pT7ifPmHs5ewHZcNXE9saeXCCopf"
      run: |
        CURRENT_TIME=$(TZ='Asia/Shanghai' date "+%Y-%m-%d %H:%M:%S")
        # 从原始数据构建详细报告
        DETAILS=$(echo '${{ steps.run-script.outputs.details }}' | jq -r '.servers | join("\n")')
        CONTENT="保护验证结果：\n${{ steps.run-script.outputs.message }}\n\n服务器状态：\n${DETAILS}\n\n时间：${CURRENT_TIME}"
        
        curl -X POST \
          "https://wxpusher.zjiecode.com/api/send/message" \
          -H "Content-Type: application/json" \
          -d '{
            "appToken": "'"$WXP_TOKEN"'",
            "content": "'"${CONTENT}"'",
            "contentType": 1,
            "uids": ["'"$WXP_UID"'"]
          }'
