name: 保活验证工作流

on:
  schedule:
    - cron: "1 5,6,7,8 * * *"
  workflow_dispatch:

jobs:
  validate-baohuo:
    runs-on: ubuntu-latest
    
    steps:
    - name: 拉取代码
      uses: actions/checkout@v3

    - name: 设置 Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: 安装依赖
      run: npm install axios

    - name: 执行保护货验证
      id: run-script
      run: |
        # 过滤掉实时日志，只捕获最终输出
        output=$(node baohuo.js | tail -n 2)
        echo "脚本输出：$output"
        
        # 提取标准化结果
        SUMMARY=$(echo "$output" | head -n 1)
        DETAILS=$(echo "$output" | tail -n 1 | sed 's/details=//')
        
        # 设置GitHub Actions输出
        echo "result=$(echo "$SUMMARY" | grep -q "失败=0_异常=0" && echo 'success' || echo 'failure')" >> $GITHUB_OUTPUT
        echo "message=$(echo "$SUMMARY" | sed 's/_/ /g')" >> $GITHUB_OUTPUT
        echo "details=${DETAILS}" >> $GITHUB_OUTPUT

    - name: 发送微信通知
      env:
        WXP_TOKEN: "AT_8W0HaJDqsTjYPxgsyCdg5xxGU58e7a9q"
        WXP_UID: "UID_pT7ifPmHs5ewHZcNXE9saeXCCopf"
      run: |
        # 构建通知内容（所有特殊字符转义）
        CONTENT=$(printf '保护验证报告：\n%s\n\n服务器状态：\n%s\n\n时间：%s' \
          "${{ steps.run-script.outputs.message }}" \
          "$(echo '${{ steps.run-script.outputs.details }}' | jq -r '.[] | "\(.server): \(.status)"' | paste -sd '\n' -)" \
          "$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')"
        )
        
        # 双重转义后发送
        ESCAPED_CONTENT=$(echo "$CONTENT" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
        curl -X POST "https://wxpusher.zjiecode.com/api/send/message" \
          -H "Content-Type: application/json" \
          -d '{
            "appToken": "'"$WXP_TOKEN"'",
            "content": "'"${ESCAPED_CONTENT}"'",
            "contentType": 1,
            "uids": ["'"$WXP_UID"'"]
          }'
